{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();// Create a custom hook to use the AuthContext\nexport const useAuth=()=>{return useContext(AuthContext);};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);// null indicates not logged in\n// Check if the user is authenticated (for example, using localStorage)\nuseEffect(()=>{const loggedUser=JSON.parse(localStorage.getItem(\"user\"));// Ensure \"user\" matches the key used in localStorage\nif(loggedUser){setUser(loggedUser);}},[]);const login=userData=>{setUser(userData);localStorage.setItem(\"user\",JSON.stringify(userData));// Save user data\n};const logout=()=>{setUser(null);localStorage.removeItem(\"user\");// Remove user data\n};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","user","setUser","loggedUser","JSON","parse","localStorage","getItem","login","userData","setItem","stringify","logout","removeItem","Provider","value"],"sources":["C:/cap/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\n// Create a custom hook to use the AuthContext\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null); // null indicates not logged in\r\n\r\n  // Check if the user is authenticated (for example, using localStorage)\r\n  useEffect(() => {\r\n    const loggedUser = JSON.parse(localStorage.getItem(\"user\")); // Ensure \"user\" matches the key used in localStorage\r\n    if (loggedUser) {\r\n      setUser(loggedUser);\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    setUser(userData);\r\n    localStorage.setItem(\"user\", JSON.stringify(userData)); // Save user data\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"user\"); // Remove user data\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,MAAO,MAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAE1C;AACA,MAAO,MAAM,CAAAO,OAAO,CAAGA,CAAA,GAAM,CAC3B,MAAO,CAAAJ,UAAU,CAACG,WAAW,CAAC,CAChC,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAAE;AAExC;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,UAAU,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAE;AAC7D,GAAIJ,UAAU,CAAE,CACdD,OAAO,CAACC,UAAU,CAAC,CACrB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAK,KAAK,CAAIC,QAAQ,EAAK,CAC1BP,OAAO,CAACO,QAAQ,CAAC,CACjBH,YAAY,CAACI,OAAO,CAAC,MAAM,CAAEN,IAAI,CAACO,SAAS,CAACF,QAAQ,CAAC,CAAC,CAAE;AAC1D,CAAC,CAED,KAAM,CAAAG,MAAM,CAAGA,CAAA,GAAM,CACnBV,OAAO,CAAC,IAAI,CAAC,CACbI,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC,CAAE;AACnC,CAAC,CAED,mBACElB,IAAA,CAACC,WAAW,CAACkB,QAAQ,EAACC,KAAK,CAAE,CAAEd,IAAI,CAAEO,KAAK,CAAEI,MAAO,CAAE,CAAAZ,QAAA,CAClDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}