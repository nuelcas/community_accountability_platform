{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { useAuth } from \"../context/AuthContext\"; // Import AuthContext\n// import \"./Navbar.css\";\n// const Navbar = () => {\n//   const [isOpen, setIsOpen] = useState(false);\n//   const { user, logout } = useAuth(); // Access user and logout from AuthContext\n//   const navigate = useNavigate(); // To redirect after logout\n//   const toggleMenu = () => {\n//     setIsOpen(!isOpen);\n//   };\n//   const handleLogout = () => {\n//     logout(); // Call logout from AuthContext\n//     navigate(\"/\"); // Redirect to home after logout\n//   };\n//   return (\n//     <nav className=\"navbar\">\n//       <img src=\"/images/cap_logo.png\" alt=\"CAP Logo\" className=\"navbar-logo\" />\n//       {/* Hamburger Menu Icon */}\n//       <div className=\"menu-toggle\" onClick={toggleMenu}>\n//         <span className={`hamburger ${isOpen ? \"open\" : \"\"}`}></span>\n//       </div>\n//       {/* Navigation Links */}\n//       <ul className={`nav-list ${isOpen ? \"active\" : \"\"}`}>\n//         <li>\n//           <Link to=\"/\" onClick={() => setIsOpen(false)}>\n//             Home\n//           </Link>\n//         </li>\n//         {user ? (\n//           // Show Logout if user is logged in\n//           <li>\n//             <button onClick={handleLogout} className=\"logout-btn\">\n//               Log Out\n//             </button>\n//           </li>\n//         ) : (\n//           // Show Login if user is not logged in\n//           <li>\n//             <Link to=\"/Login\" onClick={() => setIsOpen(false)}>\n//               Login\n//             </Link>\n//           </li>\n//         )}\n//         <li>\n//           <Link to=\"/Register\" onClick={() => setIsOpen(false)}>\n//             Register\n//           </Link>\n//         </li>\n//         <li>\n//           <Link to=\"/ReportIssue\" onClick={() => setIsOpen(false)}>\n//             Report Issue\n//           </Link>\n//         </li>\n//         <li>\n//           <Link to=\"/Polls\" onClick={() => setIsOpen(false)}>\n//             Polls\n//           </Link>\n//         </li>\n//         <li>\n//           <Link to=\"/RealTimeTracking\" onClick={() => setIsOpen(false)}>\n//             Real-Time Tracking\n//           </Link>\n//         </li>\n//         <li>\n//           <Link to=\"/BlogPage\" onClick={() => setIsOpen(false)}>\n//             Blog\n//           </Link>\n//         </li>\n//       </ul>\n//     </nav>\n//   );\n// };\n// export default Navbar;\nimport React,{useState}from\"react\";import{Link,useNavigate}from\"react-router-dom\";import{useAuth}from\"../context/AuthContext\";// Import AuthContext\nimport\"./Navbar.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Navbar=()=>{const[isOpen,setIsOpen]=useState(false);const{user,logout}=useAuth();// Access user and logout from AuthContext\nconst navigate=useNavigate();// To redirect after logout\nconst toggleMenu=()=>{setIsOpen(!isOpen);};const handleLogout=()=>{logout();// Call logout from AuthContext\nnavigate(\"/\");// Redirect to home after logout\n};return/*#__PURE__*/_jsxs(\"nav\",{className:\"navbar\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/images/cap_logo.png\",alt:\"CAP Logo\",className:\"navbar-logo\"}),/*#__PURE__*/_jsx(\"div\",{className:\"menu-toggle\",onClick:toggleMenu,children:/*#__PURE__*/_jsx(\"span\",{className:`hamburger ${isOpen?\"open\":\"\"}`})}),/*#__PURE__*/_jsxs(\"ul\",{className:`nav-list ${isOpen?\"active\":\"\"}`,children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",onClick:()=>setIsOpen(false),children:\"Home\"})}),user?/*#__PURE__*/// Show Logout if user is logged in\n_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",onClick:()=>{handleLogout();setIsOpen(false);},children:\"Log Out\"})}):/*#__PURE__*/// Show Login if user is not logged in\n_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/Login\",onClick:()=>setIsOpen(false),children:\"Login\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/Register\",onClick:()=>setIsOpen(false),children:\"Register\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/ReportIssue\",onClick:()=>setIsOpen(false),children:\"Report Issue\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/Polls\",onClick:()=>setIsOpen(false),children:\"Polls\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/RealTimeTracking\",onClick:()=>setIsOpen(false),children:\"Real-Time Tracking\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/BlogPage\",onClick:()=>setIsOpen(false),children:\"Blog\"})})]})]});};export default Navbar;","map":{"version":3,"names":["React","useState","Link","useNavigate","useAuth","jsx","_jsx","jsxs","_jsxs","Navbar","isOpen","setIsOpen","user","logout","navigate","toggleMenu","handleLogout","className","children","src","alt","onClick","to"],"sources":["C:/cap/src/components/Navbar.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import { useAuth } from \"../context/AuthContext\"; // Import AuthContext\r\n// import \"./Navbar.css\";\r\n\r\n// const Navbar = () => {\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n//   const { user, logout } = useAuth(); // Access user and logout from AuthContext\r\n//   const navigate = useNavigate(); // To redirect after logout\r\n\r\n//   const toggleMenu = () => {\r\n//     setIsOpen(!isOpen);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     logout(); // Call logout from AuthContext\r\n//     navigate(\"/\"); // Redirect to home after logout\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbar\">\r\n//       <img src=\"/images/cap_logo.png\" alt=\"CAP Logo\" className=\"navbar-logo\" />\r\n\r\n//       {/* Hamburger Menu Icon */}\r\n//       <div className=\"menu-toggle\" onClick={toggleMenu}>\r\n//         <span className={`hamburger ${isOpen ? \"open\" : \"\"}`}></span>\r\n//       </div>\r\n\r\n//       {/* Navigation Links */}\r\n//       <ul className={`nav-list ${isOpen ? \"active\" : \"\"}`}>\r\n//         <li>\r\n//           <Link to=\"/\" onClick={() => setIsOpen(false)}>\r\n//             Home\r\n//           </Link>\r\n//         </li>\r\n\r\n//         {user ? (\r\n//           // Show Logout if user is logged in\r\n//           <li>\r\n//             <button onClick={handleLogout} className=\"logout-btn\">\r\n//               Log Out\r\n//             </button>\r\n//           </li>\r\n//         ) : (\r\n//           // Show Login if user is not logged in\r\n//           <li>\r\n//             <Link to=\"/Login\" onClick={() => setIsOpen(false)}>\r\n//               Login\r\n//             </Link>\r\n//           </li>\r\n//         )}\r\n\r\n//         <li>\r\n//           <Link to=\"/Register\" onClick={() => setIsOpen(false)}>\r\n//             Register\r\n//           </Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to=\"/ReportIssue\" onClick={() => setIsOpen(false)}>\r\n//             Report Issue\r\n//           </Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to=\"/Polls\" onClick={() => setIsOpen(false)}>\r\n//             Polls\r\n//           </Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to=\"/RealTimeTracking\" onClick={() => setIsOpen(false)}>\r\n//             Real-Time Tracking\r\n//           </Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to=\"/BlogPage\" onClick={() => setIsOpen(false)}>\r\n//             Blog\r\n//           </Link>\r\n//         </li>\r\n//       </ul>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\"; // Import AuthContext\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const { user, logout } = useAuth(); // Access user and logout from AuthContext\r\n  const navigate = useNavigate(); // To redirect after logout\r\n\r\n  const toggleMenu = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout(); // Call logout from AuthContext\r\n    navigate(\"/\"); // Redirect to home after logout\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <img src=\"/images/cap_logo.png\" alt=\"CAP Logo\" className=\"navbar-logo\" />\r\n\r\n      {/* Hamburger Menu Icon */}\r\n      <div className=\"menu-toggle\" onClick={toggleMenu}>\r\n        <span className={`hamburger ${isOpen ? \"open\" : \"\"}`}></span>\r\n      </div>\r\n\r\n      {/* Navigation Links */}\r\n      <ul className={`nav-list ${isOpen ? \"active\" : \"\"}`}>\r\n        <li>\r\n          <Link to=\"/\" onClick={() => setIsOpen(false)}>\r\n            Home\r\n          </Link>\r\n        </li>\r\n\r\n        {user ? (\r\n          // Show Logout if user is logged in\r\n          <li>\r\n            <Link\r\n              to=\"/\"\r\n              onClick={() => {\r\n                handleLogout();\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              Log Out\r\n            </Link>\r\n          </li>\r\n        ) : (\r\n          // Show Login if user is not logged in\r\n          <li>\r\n            <Link to=\"/Login\" onClick={() => setIsOpen(false)}>\r\n              Login\r\n            </Link>\r\n          </li>\r\n        )}\r\n\r\n        <li>\r\n          <Link to=\"/Register\" onClick={() => setIsOpen(false)}>\r\n            Register\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/ReportIssue\" onClick={() => setIsOpen(false)}>\r\n            Report Issue\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/Polls\" onClick={() => setIsOpen(false)}>\r\n            Polls\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/RealTimeTracking\" onClick={() => setIsOpen(false)}>\r\n            Real-Time Tracking\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/BlogPage\" onClick={() => setIsOpen(false)}>\r\n            Blog\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}