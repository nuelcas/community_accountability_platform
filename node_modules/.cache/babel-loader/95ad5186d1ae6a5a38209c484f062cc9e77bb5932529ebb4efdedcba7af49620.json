{"ast":null,"code":"import React,{useContext}from\"react\";import{Route,Navigate}from\"react-router-dom\";import{AuthContext}from\"../context/AuthContext\";// Import the context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{element:Element,...rest}=_ref;const{isAuthenticated}=useContext(AuthContext);return/*#__PURE__*/_jsx(Route,{...rest,element:isAuthenticated?/*#__PURE__*/_jsx(Element,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})});};export default ProtectedRoute;","map":{"version":3,"names":["React","useContext","Route","Navigate","AuthContext","jsx","_jsx","ProtectedRoute","_ref","element","Element","rest","isAuthenticated","to"],"sources":["C:/cap/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Route, Navigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\"; // Import the context\r\n\r\nconst ProtectedRoute = ({ element: Element, ...rest }) => {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      element={isAuthenticated ? <Element /> : <Navigate to=\"/login\" />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAClD,OAASC,WAAW,KAAQ,wBAAwB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAmC,IAAlC,CAAEC,OAAO,CAAEC,OAAO,CAAE,GAAGC,IAAK,CAAC,CAAAH,IAAA,CACnD,KAAM,CAAEI,eAAgB,CAAC,CAAGX,UAAU,CAACG,WAAW,CAAC,CAEnD,mBACEE,IAAA,CAACJ,KAAK,KACAS,IAAI,CACRF,OAAO,CAAEG,eAAe,cAAGN,IAAA,CAACI,OAAO,GAAE,CAAC,cAAGJ,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAAE,CAAE,CACnE,CAAC,CAEN,CAAC,CAED,cAAe,CAAAN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}