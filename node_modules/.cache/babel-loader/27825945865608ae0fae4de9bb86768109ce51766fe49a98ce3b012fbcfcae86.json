{"ast":null,"code":"import React,{useState}from\"react\";import axios from\"axios\";import{Link,useNavigate}from\"react-router-dom\";import{useAuth}from\"../context/AuthContext\";import\"./Login.css\";import\"./Contact.css\";import Contact from\"./Contact\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[message,setMessage]=useState(\"\");const{login}=useAuth();// Use the login function from AuthContext\nconst navigate=useNavigate();const handleLogin=async e=>{e.preventDefault();try{const response=await axios.post(\"http://localhost:3000/api/users/login\",{email,password});const{token,user}=response.data;// Check if token and user exist in the response\nif(token&&user){// Save the token and login state\nlocalStorage.setItem(\"authToken\",token);login(user);// Update the authentication state\nsetMessage(\"Login Successfully\");// Navigate to a protected page (e.g., Home or any protected route)\nnavigate(\"/reportissue\");setTimeout(()=>{setMessage(\"\");},3000);}else{setMessage(\"Login failed. Invalid response from server.\");}}catch(err){if(err.response&&err.response.status===401){setMessage(\"Invalid email or password\");}else{setMessage(\"Login failed. Please try again.\");}console.error(\"Login failed\",err);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",children:\"Login\"})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"login-message\",children:message}),/*#__PURE__*/_jsxs(\"div\",{className:\"register-prompt\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Don't have an account?\"}),/*#__PURE__*/_jsx(Link,{to:\"/register\",className:\"register-link\",children:\"Register Here\"})]})]}),/*#__PURE__*/_jsx(Contact,{})]});};export default Login;","map":{"version":3,"names":["React","useState","axios","Link","useNavigate","useAuth","Contact","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","message","setMessage","login","navigate","handleLogin","e","preventDefault","response","post","token","user","data","localStorage","setItem","setTimeout","err","status","console","error","className","children","onSubmit","type","placeholder","value","onChange","target","required","to"],"sources":["C:/cap/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"./Login.css\";\r\nimport \"./Contact.css\";\r\nimport Contact from \"./Contact\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const { login } = useAuth(); // Use the login function from AuthContext\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/api/users/login\",\r\n        { email, password }\r\n      );\r\n\r\n      const { token, user } = response.data;\r\n\r\n      // Check if token and user exist in the response\r\n      if (token && user) {\r\n        // Save the token and login state\r\n        localStorage.setItem(\"authToken\", token);\r\n        login(user); // Update the authentication state\r\n\r\n        setMessage(\"Login Successfully\");\r\n\r\n        // Navigate to a protected page (e.g., Home or any protected route)\r\n        navigate(\"/reportissue\");\r\n\r\n        setTimeout(() => {\r\n          setMessage(\"\");\r\n        }, 3000);\r\n      } else {\r\n        setMessage(\"Login failed. Invalid response from server.\");\r\n      }\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 401) {\r\n        setMessage(\"Invalid email or password\");\r\n      } else {\r\n        setMessage(\"Login failed. Please try again.\");\r\n      }\r\n      console.error(\"Login failed\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"login-button\">\r\n            Login\r\n          </button>\r\n        </form>\r\n\r\n        {message && <div className=\"login-message\">{message}</div>}\r\n\r\n        <div className=\"register-prompt\">\r\n          <p>Don't have an account?</p>\r\n          <Link to=\"/register\" className=\"register-link\">\r\n            Register Here\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <Contact />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}