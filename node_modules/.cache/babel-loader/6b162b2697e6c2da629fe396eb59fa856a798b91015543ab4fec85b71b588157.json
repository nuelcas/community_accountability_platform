{"ast":null,"code":"var _jsxFileName = \"C:\\\\cap\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// src/components/ProtectedRoute.js\nimport React, { useContext } from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\"; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element,\n  ...rest\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext); // Assuming `user` indicates if a user is logged in\n\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: user ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 33\n    }, this) // Redirect to login if not authenticated\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(ProtectedRoute, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Route","Navigate","AuthContext","jsxDEV","_jsxDEV","ProtectedRoute","element","rest","_s","user","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/cap/src/components/ProtectedRoute.js"],"sourcesContent":["// src/components/ProtectedRoute.js\r\nimport React, { useContext } from \"react\";\r\nimport { Route, Navigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\"; // Adjust the path as necessary\r\n\r\nconst ProtectedRoute = ({ element, ...rest }) => {\r\n  const { user } = useContext(AuthContext); // Assuming `user` indicates if a user is logged in\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      element={user ? element : <Navigate to=\"/login\" replace />} // Redirect to login if not authenticated\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM;IAAEC;EAAK,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC,CAAC,CAAC;;EAE1C,oBACEE,OAAA,CAACJ,KAAK;IAAA,GACAO,IAAI;IACRD,OAAO,EAAEG,IAAI,GAAGH,OAAO,gBAAGF,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEN,CAAC;AAACP,EAAA,CATIH,cAAc;AAAAW,EAAA,GAAdX,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}