{"ast":null,"code":"// src/components/ProtectedRoute.js\nimport React,{useContext}from\"react\";import{Route,Navigate}from\"react-router-dom\";import{AuthContext}from\"../context/AuthContext\";// Adjust the path as necessary\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{element,...rest}=_ref;const{user}=useContext(AuthContext);// Assuming `user` indicates if a user is logged in\nreturn/*#__PURE__*/_jsx(Route,{...rest,element:user?element:/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true})// Redirect to login if not authenticated\n});};export default ProtectedRoute;","map":{"version":3,"names":["React","useContext","Route","Navigate","AuthContext","jsx","_jsx","ProtectedRoute","_ref","element","rest","user","to","replace"],"sources":["C:/cap/src/components/ProtectedRoute.js"],"sourcesContent":["// src/components/ProtectedRoute.js\r\nimport React, { useContext } from \"react\";\r\nimport { Route, Navigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\"; // Adjust the path as necessary\r\n\r\nconst ProtectedRoute = ({ element, ...rest }) => {\r\n  const { user } = useContext(AuthContext); // Assuming `user` indicates if a user is logged in\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      element={user ? element : <Navigate to=\"/login\" replace />} // Redirect to login if not authenticated\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAClD,OAASC,WAAW,KAAQ,wBAAwB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAA0B,IAAzB,CAAEC,OAAO,CAAE,GAAGC,IAAK,CAAC,CAAAF,IAAA,CAC1C,KAAM,CAAEG,IAAK,CAAC,CAAGV,UAAU,CAACG,WAAW,CAAC,CAAE;AAE1C,mBACEE,IAAA,CAACJ,KAAK,KACAQ,IAAI,CACRD,OAAO,CAAEE,IAAI,CAAGF,OAAO,cAAGH,IAAA,CAACH,QAAQ,EAACS,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAG;AAAA,CAC7D,CAAC,CAEN,CAAC,CAED,cAAe,CAAAN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}