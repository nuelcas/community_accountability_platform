{"ast":null,"code":"var _jsxFileName = \"C:\\\\cap\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import { Navigate } from \"react-router-dom\";\n// import { useAuth } from \"../context/AuthContext\"; // Ensure this path is correct\n\n// const ProtectedRoute = ({ children, onAccess }) => {\n//   const { user } = useAuth(); // Check user authentication from AuthContext\n//   const token = localStorage.getItem(\"authToken\"); // Check for token in localStorage\n\n//   useEffect(() => {\n//     if (user && token && onAccess) {\n//       onAccess(); // Fetch protected data if user and token exist\n//     }\n//   }, [user, token, onAccess]);\n\n//   if (!user || !token) {\n//     return <Navigate to=\"/login\" replace />; // Redirect to login if not authenticated\n//   }\n\n//   return children; // Render the protected route component if authenticated\n// };\n\n// export default ProtectedRoute;\n\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const token = localStorage.getItem(\"authToken\");\n  if (!user || !token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this); // Redirect to login if not authenticated\n  }\n  return children; // Render the protected route component if authenticated\n};\n_s(ProtectedRoute, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","token","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/cap/src/components/ProtectedRoute.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import { Navigate } from \"react-router-dom\";\r\n// import { useAuth } from \"../context/AuthContext\"; // Ensure this path is correct\r\n\r\n// const ProtectedRoute = ({ children, onAccess }) => {\r\n//   const { user } = useAuth(); // Check user authentication from AuthContext\r\n//   const token = localStorage.getItem(\"authToken\"); // Check for token in localStorage\r\n\r\n//   useEffect(() => {\r\n//     if (user && token && onAccess) {\r\n//       onAccess(); // Fetch protected data if user and token exist\r\n//     }\r\n//   }, [user, token, onAccess]);\r\n\r\n//   if (!user || !token) {\r\n//     return <Navigate to=\"/login\" replace />; // Redirect to login if not authenticated\r\n//   }\r\n\r\n//   return children; // Render the protected route component if authenticated\r\n// };\r\n\r\n// export default ProtectedRoute;\r\n\r\nimport React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const token = localStorage.getItem(\"authToken\");\r\n\r\n  if (!user || !token) {\r\n    return <Navigate to=\"/login\" replace />; // Redirect to login if not authenticated\r\n  }\r\n\r\n  return children; // Render the protected route component if authenticated\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAK,CAAC,GAAGN,OAAO,CAAC,CAAC;EAC1B,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAE/C,IAAI,CAACH,IAAI,IAAI,CAACC,KAAK,EAAE;IACnB,oBAAOL,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EAC3C;EAEA,OAAOX,QAAQ,CAAC,CAAC;AACnB,CAAC;AAACC,EAAA,CATIF,cAAc;EAAA,QACDH,OAAO;AAAA;AAAAgB,EAAA,GADpBb,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}